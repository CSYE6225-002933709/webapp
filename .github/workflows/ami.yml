name: AMI

on:  
  # Triggers the workflow on push or pull request events but only for the "main" branch
  workflow_dispatch:
  
  #pull_request:
  #  branches: [ "main" ]
  #  types: 
  #    - closed

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  if_merged:
    #if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEV_REGION }}

      - name: Run apt update
        run: sudo apt update   
        
      - name: Install node modules
        run: npm i       
      
      - name: Install zip module
        run: sudo apt-get install zip 

      - name: Create build artifact
        run: zip -r project.zip .            

      - name: Init packer
        run: packer init .

      - name: Running the packer script 
        run: packer build ami.pkr.hcl

      - name: Change AWS credentials to demo        
        uses: aws-actions/configure-aws-credentials@v1        
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEV_REGION }}
      
      - name: Extract ami id from manifest.json
        run: ami_id=$(cat manifest.json | grep artifact_id | cut -d ":" -f 3 | tr -d '",')

      - name: Fetch old launch template data and save it
        run: aws ec2 describe-launch-template-versions --launch-template-name "myLaunchTemplate" --versions 1 

      - name: Create launch template
        run: |
          new_template_version=$(aws ec2 create-launch-template-version --source-version 1 --launch-template-name "myLaunchTemplate" --launch-template-data "{\"ImageId\":\"$ami_id\"}" --version-description "v2" --query 'LaunchTemplateVersion.VersionNumber' --output text)
          echo "New Launch Template Version: $new_template_version"    
        
      - name: Update autoscaling group
        run: aws autoscaling update-auto-scaling-group --auto-scaling-group-name "autoScalingGroup" --launch-template "{\"LaunchTemplateName\":"myLaunchTemplate", \"Version\":\"$new_template_version\"}"

      - name: Instance refresh
        run: |
          instance_refresh_id=$(aws autoscaling start-instance-refresh --auto-scaling-group-name "autoScalingGroup" --strategy "Rolling" --query 'InstanceRefreshId' --output text)
          echo "Instance Refresh started. ID: $instance_refresh_id"

      
