name: AMI

on:  
  # Triggers the workflow on push or pull request events but only for the "main" branch
  workflow_dispatch:
  
  #pull_request:
  #  branches: [ "main" ]
  #  types: 
  #    - closed

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  if_merged:
    #if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEV_REGION }}

      - name: Run apt update
        run: sudo apt update   
        
      - name: Install node modules
        run: npm i       
      
      - name: Install zip module
        run: sudo apt-get install zip 

      - name: Create build artifact
        run: zip -r project.zip .            

      - name: Init packer
        run: packer init .

      - name: Running the packer script 
        run: packer build ami.pkr.hcl


      - name: Change AWS credentials to demo        
        uses: aws-actions/configure-aws-credentials@v1        
        with:
          aws-access-key-id: ${{ secrets.AWS_DEMO_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEMO_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEV_REGION }}
      
      - name: Extract ami id from manifest.json
        run: |      
          sudo apt-get install jq
          echo $ami_id

      - name: Fetch old launch template data and save it
        run: aws ec2 describe-launch-template-versions --launch-template-name "myLaunchTemplate" --versions 1 > template-data.json

      #- name: Setup JSON data
      #  run: |
      #    sed -i "s/ami-[a-zA-Z0-9]*/${ami_id}/g" template-data.json          
      #    cat template-data.json
      #    jq '.LaunchTemplateData' template-data.json.json > extracted_data.json
      #    jq 'walk(if type == "number" or type == "boolean" then tostring else . end)' extracted_data.json > new_extracted_data.json
      #    iam_instance_profile_name=$(jq -r '.IamInstanceProfile.Name' new_extracted_data.json)   
      #    image_id=$(jq -r '.ImageId' new_extracted_data.json)                           
      #    user_data=$(jq -r '.UserData' new_extracted_data.json)    
      #    security_group_ids=$(jq -r '.SecurityGroupIds[]' new_extracted_data.json | jq -s -c .)


      - name: Create launch template
        run: |          
          ami_id=$(cat manifest.json | jq -r '.builds[-1].artifact_id' | cut -d':' -f2)     
          new_template_version=$(aws ec2 create-launch-template-version --source-version "1" --launch-template-name "myLaunchTemplate" --launch-template-data "ImageId=$ami_id" --version-description "v2" --query 'LaunchTemplateVersion.VersionNumber' --output text)   

          aws autoscaling update-auto-scaling-group --auto-scaling-group-name "autoScalingGroup" --launch-template "LaunchTemplateName=myLaunchTemplate,Version=$new_template_version"
 
          instance_refresh_id=$(aws autoscaling start-instance-refresh --auto-scaling-group-name "autoScalingGroup" --strategy "Rolling" --query 'InstanceRefreshId' --output text)
      
